name: 'Alire Setup'
description: 'Install Alire package manager'
author: 'Alire Project'

inputs:
  version:
    description: Use this argument to install a stable or nightly release. Use a version number without v prefix, e.g., 1.0.1, 1.1.0, or 'nightly'. This argument will be ignored if a branch argument is supplied. Defaults to the latest stable release.
    required: false
    default: '1.2.2'
  branch:
    description: Use this argument to install a development branch (e.g., master). Using this option will require a preexisting compiler in the workflow environment.
    required: false
    default: ''
  toolchain:
    description: Arguments to pass to `alr toolchain` after setup.
    required: false
    default: 'gnat_native gprbuild'
  toolchain_dir:
    description: Location to install toolchain under.
    required: false
    default: ''
  cache:
    description: Whether to reuse a cached previous install. Only works for stable releases.
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    # We don't cache branch builds for now, as this would require to check the head commit
    - name: Reuse cached installation
      if: ${{ inputs.branch == '' && inputs.version != 'nightly' && inputs.cache }}
      id: cache-alr
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/alire
          ~/.config/alire
          ./alire_install
        key: alr-v${{ inputs.version }}-t:${{ inputs.toolchain }}-o:${{ runner.os }}
        # .cache contains msys64 install on Windows
        # .config contains the toolchain at the default location, besides index config
        # ./alire_install contains alr itself

    # To run the old setup action which is javascript
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    # Install alr. If found cached it will return without reinstalling (but setting PATH).
    # We forward inputs as they're bugged for JS in composite actions.
    - run: node lib/main.js '${{ toJSON(inputs) }}'
      shell: bash

    # Display result for the record
    - shell: bash
      run: |
        which alr
        alr --version